
@{
ViewData["Title"] = "Subscriptions";
}
@model List<SubWallet.Models.Subscription>
@{
    ViewData["Title"] = "Subscriptions";
}

<h1>New Subscription</h1>

<form asp-action="Add" asp-controller="Subscriptions" method="post">
    <label for="Name">Name:</label>
    <input type="text" id="Name" name="Name" required />

    <label for="Cost">Cost:</label>
    <input type="number" id="Cost" name="Cost" step="0.01" required />

    <label for="StartDate">Start Date:</label>
    <input type="date" id="StartDate" name="StartDate" required />

    <label for="Cycle">Billing Cycle:</label>
    <select id="Cycle" name="Cycle">
        <option value="Weekly">Weekly</option>
        <option value="BiWeekly">BiWeekly</option>
        <option value="Monthly">Monthly</option>
        <option value="Yearly">Yearly</option>
    </select>

    <button type="submit">Add Subscription</button>
</form>

<hr />

<!-- Chart -->
<canvas id="subscriptionsChart"></canvas>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('subscriptionsChart').getContext('2d');

    // Pull labels and data from Razor model
    const labels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(s => s.Name)));
    const data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(s => s.Cost)));

    const subscriptionsChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Monthly Cost ($)',
                data: data,
                borderWidth: 1,
                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' }
            }
        }
    });
</script>



